---
layout: "post" 
title: "Beginning GitHub Pages with Jekyll : A Newbie Use Case" 
meta-description: "A few notes on my experience setting up a Jekyll blog on GitHub as a newbie NaP (Not a Programmer), along with some tips on getting started."
image: "jekyll-setup.png"
tags: "hello"
category:
---

## Introduction

As my first genuine post, I thought I'd share my experience setting up this blog site. I decided to start a blog chronicling my experiences moving into web development, and using web development tools to do so seemed apt. At the end of it all, I became comfortable with using the Terminal to preview my Jekyll[1] blog on my local computer and also to build the blog to send online, began learning Liquid[2] templating, and started picking up the Markdown[3] and YAML[4] markup language basics.

**Why Jekyll[1] on GitHub Pages[5]?** Well, along my path to web development, I encountered GitHub[6] as a place which all my programmer friends use not just for version control, but to also host projects they've built, connect with other developers, and participate in pirate levels of drinking at GitHub drinkups. I decided to learn how to use it, and began to practice creating repos (repositories of files associated with a project; basically, their name for a master file folder), using the GitHub app for Mac to commit changes and sync branches, and using GitHub Pages to publish web pages with the results. For examples, check out my portfolio[7].

When I learned that you can set up a blog using GitHub Pages (mainly via Jen's blog[8]), I set about doing just that. But then, I got to the step where you select a template, and the designer in my head went "Well naturally I want my *own* design." Aaannd, here we are.

## Background

Here I must tell you: I am NaP. That is, I am Not a Programmer. I am also Not a Number (NaN), but am using that nomenclature to also identify that I am, indeed, NaP. So much of the resources available online for anything GitHub-related is (understandably so) written by programmers for other programmers. This calls in a whole host of assumptions that authors make when communicating to their audiences, such as familiarity with using the Command Terminal to enter information, commands and shortcuts, and so on. This is **without question** the biggest challenge I have faced in learning web development. Yes, some of these things are hard, and learning something new on your own is hard, but deciphering usable instructions from instructions written for someone else has undeniably been the greatest time commitment and mental challenge.

[1]: http://jekyllrb.com/ "Jekyll Static Blogging"
[2]: http://wiki.shopify.com/Liquid "Liquid Templating for Designers"
[3]: http://daringfireball.net/projects/markdown/ "Markdown"
[4]: http://jekyllrb.com/docs/frontmatter/ "YAML Front End Matter"
[5]: http://pages.github.com/ "GitHub Pages"
[6]: http://github.com "GitHub"
[7]: http://jandennison.com/ "Jan Dennison Portfolio"
[8]: http://jenmyers.net/ "Jen Myers Web Developer"